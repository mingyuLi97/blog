import{_ as s,o as n,c as a,a as l}from"./app.d43055c5.js";const u=JSON.parse('{"title":"\u6570\u636E\u7C7B\u578B\u68C0\u6D4B","description":"","frontmatter":{},"headers":[{"level":2,"title":"typeof","slug":"typeof","link":"#typeof","children":[]},{"level":2,"title":"instanceof","slug":"instanceof","link":"#instanceof","children":[]},{"level":2,"title":"constructor","slug":"constructor","link":"#constructor","children":[]},{"level":2,"title":"Object.prototype.toString.call([value])","slug":"object-prototype-tostring-call-value","link":"#object-prototype-tostring-call-value","children":[]},{"level":2,"title":"jquery \u68C0\u6D4B\u65B9\u6CD5","slug":"jquery-\u68C0\u6D4B\u65B9\u6CD5","link":"#jquery-\u68C0\u6D4B\u65B9\u6CD5","children":[]}],"relativePath":"knowledge/js/typeof.md"}'),p={name:"knowledge/js/typeof.md"},o=l(`<h1 id="\u6570\u636E\u7C7B\u578B\u68C0\u6D4B" tabindex="-1">\u6570\u636E\u7C7B\u578B\u68C0\u6D4B <a class="header-anchor" href="#\u6570\u636E\u7C7B\u578B\u68C0\u6D4B" aria-hidden="true">#</a></h1><h2 id="typeof" tabindex="-1">typeof <a class="header-anchor" href="#typeof" aria-hidden="true">#</a></h2><p>\u539F\u7406\uFF1A\u76F4\u63A5\u5728\u8BA1\u7B97\u673A\u5E95\u5C42\u57FA\u4E8E\u7C7B\u578B\u7684\u503C\uFF08\u4E8C\u8FDB\u5236\uFF09\u8FDB\u884C\u68C0\u6D4B</p><div class="language-javascript"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;">// object</span></span>
<span class="line"><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/^</span><span style="color:#D19A66;">1</span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;">// object</span></span>
<span class="line"><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;">// object</span></span>
<span class="line"><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {}; </span><span style="color:#7F848E;">// function</span></span>
<span class="line"></span></code></pre></div><p>\u5F0A\u7AEF\uFF1A</p><ul><li>typeof \u4E0D\u80FD\u533A\u522B \u666E\u901A\u5BF9\u8C61/\u6570\u7EC4\u5BF9\u8C61/\u6B63\u5219\u5BF9\u8C61/\u65E5\u671F\u5BF9\u8C61</li><li>\u4F1A\u9519\u8BEF\u7684\u5C06 null \u68C0\u6D4B\u4E3A object</li></ul><h2 id="instanceof" tabindex="-1">instanceof <a class="header-anchor" href="#instanceof" aria-hidden="true">#</a></h2><p>\u539F\u7406\uFF1A\u68C0\u6D4B\u5F53\u524D\u5B9E\u4F8B\u662F\u5426\u5C5E\u4E8E\u8FD9\u4E2A\u7C7B\uFF0C\u53EA\u8981\u5F53\u524D\u7C7B\u51FA\u73B0\u5728\u5B9E\u4F8B\u7684\u539F\u578B\u94FE\u4E0A\uFF0C\u7ED3\u679C\u90FD\u662F true\uFF0C\u80FD\u591F\u533A\u5206\u5BF9\u8C61\u5230\u5E95\u662F\u54EA\u79CD\u5BF9\u8C61</p><div class="language-javascript"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">instanceof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;">// true</span></span>
<span class="line"><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">instanceof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Number</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;">// false</span></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Number</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">instanceof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Number</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;">// true</span></span>
<span class="line"><span style="color:#98C379;">&quot;a&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">instanceof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;">// false</span></span>
<span class="line"></span></code></pre></div><p>\u5F0A\u7AEF\uFF1A</p><ul><li><p>\u7531\u4E8E\u6211\u4EEC\u53EF\u4EE5\u968F\u610F\u4FEE\u6539\u539F\u578B\u7684\u6307\u5411\uFF0C\u6240\u4EE5\u68C0\u6D4B\u7684\u7ED3\u679C\u53EF\u80FD\u4E0D\u51C6\u786E</p></li><li><p>\u4E0D\u80FD\u68C0\u6D4B\u57FA\u672C\u7C7B\u578B</p></li><li><p>null \u548C undefined \u4F7F\u7528 instanceof \u65F6\u4F1A\u629B\u51FA\u5F02\u5E38</p></li></ul><p>\u6E90\u7801\uFF1A</p><div class="language-javascript"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">instance_of</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">instance</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">classFunc</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">classFuncPrototype</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">classFunc</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;">// Object.getPrototypeOf(obj) === obj.__proto__</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;">// IE \u4E0B\u4E0D\u517C\u5BB9 __proto__ \u4F7F\u7528 getPrototypeOf</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">proto</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getPrototypeOf</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">instance</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">while</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">proto</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">proto</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">classFuncPrototype</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">proto</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getPrototypeOf</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">proto</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-hidden="true">#</a></h2><div class="language-javascript"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">constructor</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">Array</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// true</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">  ).</span><span style="color:#E06C75;">constructor</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">===</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">Number</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;">// true</span></span>
<span class="line"><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">constructor</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Object</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;">// false</span></span>
<span class="line"></span></code></pre></div><p>\u539F\u7406\uFF1A\u901A\u8FC7\u6784\u9020\u51FD\u6570\u68C0\u6D4B</p><p>\u5F0A\u7AEF\uFF1A</p><ul><li>\u80FD\u591F\u89E3\u51B3 instanceof \u4E0D\u80FD\u68C0\u6D4B\u57FA\u672C\u7C7B\u578B\u7684\u7F3A\u70B9\uFF0C\u4F46\u662F constructor \u53EF\u4EE5\u968F\u610F\u66F4\u6539\uFF0C\u6240\u4EE5\u4E0D\u51C6\u786E</li><li>null \u548C undefined \u662F\u65E0\u6548\u5BF9\u8C61\uFF0C\u56E0\u6B64\u4E0D\u5B58\u5728 constructor\uFF0C\u6545\u4E0D\u80FD\u5BF9\u8FD9\u4E24\u4E2A\u4F5C\u51FA\u5224\u65AD</li></ul><h2 id="object-prototype-tostring-call-value" tabindex="-1">Object.prototype.toString.call([value]) <a class="header-anchor" href="#object-prototype-tostring-call-value" aria-hidden="true">#</a></h2><div class="language-javascript"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">toString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;">// &quot;[object Number]&quot;</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">toString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">NaN</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;">// &quot;[object Number]&quot;</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">toString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;">// &quot;[object Boolean]&quot;</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">toString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">([]); </span><span style="color:#7F848E;">// &quot;[object Array]&quot;</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">toString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">({}); </span><span style="color:#7F848E;">// &quot;[object Object]&quot;</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">toString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {}); </span><span style="color:#7F848E;">// &quot;[object Function]&quot;</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">toString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;">// &quot;[object Null]&quot;</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">toString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">undefined</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;">// &quot;[object Undefined]&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="jquery-\u68C0\u6D4B\u65B9\u6CD5" tabindex="-1"><code>jquery</code> \u68C0\u6D4B\u65B9\u6CD5 <a class="header-anchor" href="#jquery-\u68C0\u6D4B\u65B9\u6CD5" aria-hidden="true">#</a></h2><div class="language-javascript"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">class2type</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {},</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">toString</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">class2type</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">toString</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;">// \u7B49\u4EF7\u4E8E Object.prototype.toString</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">typeList</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;Boolean Number String Function Array Date RegExp Object Error&quot;</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot; &quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;">// \u8BBE\u5B9A\u6570\u636E\u7C7B\u578B\u7684\u6620\u5C04\u8868</span></span>
<span class="line"><span style="color:#E5C07B;">typeList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">class2type</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">\`[object </span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">name</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">]\`</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toLowerCase</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">toType</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// \u5982\u679C\u4F20\u5165\u7684\u662F null \u6216\u8005 undefined\uFF0C\u8FD4\u56DE\u5BF9\u5E94\u7684\u5B57\u7B26\u4E32</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;object&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;function&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">class2type</span><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">toString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">)] </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;object&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre></div>`,22),e=[o];function t(c,B,r,y,F,A){return n(),a("div",null,e)}const C=s(p,[["render",t]]);export{u as __pageData,C as default};
