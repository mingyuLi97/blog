import{_ as e,o as s,c as a,Q as o}from"./chunks/framework.fa80b722.js";const u=JSON.parse('{"title":"preload、prefetch、preconnect、dns-prefetch","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/browser/preload.md","filePath":"knowledge/browser/preload.md"}'),l={name:"knowledge/browser/preload.md"},n=o('<h1 id="preload、prefetch、preconnect、dns-prefetch" tabindex="-1">preload、prefetch、preconnect、dns-prefetch <a class="header-anchor" href="#preload、prefetch、preconnect、dns-prefetch" aria-label="Permalink to &quot;preload、prefetch、preconnect、dns-prefetch&quot;">​</a></h1><h2 id="preload" tabindex="-1">preload <a class="header-anchor" href="#preload" aria-label="Permalink to &quot;preload&quot;">​</a></h2><p>提高资源加载的优先级，保证资源更早的可用。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">link</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">rel</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;preload&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">href</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;style.css&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">as</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;style&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span></code></pre></div><h2 id="prefetch" tabindex="-1">prefetch <a class="header-anchor" href="#prefetch" aria-label="Permalink to &quot;prefetch&quot;">​</a></h2><p>用于提前加载未来可能用到的资源。当页面空闲时会去下载该资源，并将其缓存，使用时在 prefetch cache 中读取该资源</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">link</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">rel</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;prefetch&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">as</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;script&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">href</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;xxx.min.js&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span></code></pre></div><h2 id="preconnect" tabindex="-1">preconnect <a class="header-anchor" href="#preconnect" aria-label="Permalink to &quot;preconnect&quot;">​</a></h2><p>当页面要访问资源时，首先要建立连接。所以可以设置 preconnect 提前建立连接，资源请求时就可以直接下载。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">link</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">rel</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;preconnect&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">href</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;https://example.com&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span></code></pre></div><h2 id="dns-prefetch" tabindex="-1">dns-prefetch <a class="header-anchor" href="#dns-prefetch" aria-label="Permalink to &quot;dns-prefetch&quot;">​</a></h2><p>提前解析 dns</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">link</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">rel</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;dns-prefetch&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">href</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;https://cdn.bootcss.com&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ol><li>preconnect 比 dns-prefetch 多了 TCP 和 TLS 的预解析。</li><li>如果页面需要建立与许多第三方域的连接，则将它们预先连接会适得其反。 preconnect 最好仅用于最关键的连接。对于其他的，只需使用 dns-prefetch 即可节省第一步的时间-DNS 查找。</li><li>preconnect 和 dns-prefetch 适用于跨域的网站</li></ol></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/preload" target="_blank" rel="noreferrer">MDN：Preload</a></li><li><a href="https://html.spec.whatwg.org/multipage/links.html#link-type-preconnect" target="_blank" rel="noreferrer">MDN：preconnect 标准</a></li></ul>',16),t=[n];function p(r,c,d,h,i,B){return s(),a("div",null,t)}const f=e(l,[["render",p]]);export{u as __pageData,f as default};
