import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.f14b72c3.js";const A=JSON.parse('{"title":"第一章：权衡的艺术","description":"","frontmatter":{},"headers":[],"relativePath":"book-note/vuejs-design/1.md"}'),p={name:"book-note/vuejs-design/1.md"},o=l(`<h1 id="第一章-权衡的艺术" tabindex="-1">第一章：权衡的艺术 <a class="header-anchor" href="#第一章-权衡的艺术" aria-label="Permalink to &quot;第一章：权衡的艺术&quot;">​</a></h1><h2 id="命令式和声明式" tabindex="-1">命令式和声明式 <a class="header-anchor" href="#命令式和声明式" aria-label="Permalink to &quot;命令式和声明式&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 命令式</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;#app&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 获取 div</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">text</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;hello&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 设置文本内容</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;click&#39;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">alert</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;ok&#39;</span><span style="color:#ABB2BF;">)); </span><span style="color:#7F848E;font-style:italic;">// 注册事件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 声明式</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;"> </span><span style="color:#FFFFFF;">@click=&quot;()</span><span style="color:#ABB2BF;"> </span><span style="color:#FFFFFF;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#FFFFFF;">alert(&#39;ok&#39;)&quot;&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;font-style:italic;">hello</span><span style="color:#ABB2BF;"> </span><span style="color:#FFFFFF;">&lt;/div&gt;</span></span></code></pre></div><table><thead><tr><th style="text-align:center;"></th><th style="text-align:center;">实现方式</th><th style="text-align:center;">代表</th><th style="text-align:center;">特点</th></tr></thead><tbody><tr><td style="text-align:center;">命令式</td><td style="text-align:center;">关注过程</td><td style="text-align:center;">原生 js、jQuery</td><td style="text-align:center;">性能好，维护成本高</td></tr><tr><td style="text-align:center;">声明式</td><td style="text-align:center;">关注结果</td><td style="text-align:center;">Vue</td><td style="text-align:center;">性能不错、代码更加直观、维护成本低</td></tr></tbody></table><blockquote><p>声明式的更新消耗 = 找出差异的消耗 + 命令式修改的消耗</p></blockquote><div class="tip custom-block"><p class="custom-block-title">TIP</p><ol><li>Vue.js 的内部实现是命令式的，而暴露给用户的却更加声明式</li><li>Vue.js 理念：保证可维护性的同时最大程度的保证性能</li></ol></div><h2 id="编译时和运行时" tabindex="-1">编译时和运行时 <a class="header-anchor" href="#编译时和运行时" aria-label="Permalink to &quot;编译时和运行时&quot;">​</a></h2><p>运行时</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 输入</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">tag</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;div&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">children</span><span style="color:#ABB2BF;">: [{ </span><span style="color:#E06C75;">tag</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;span&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">children</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;hello world&#39;</span><span style="color:#ABB2BF;"> }]</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 将对象渲染到 body</span></span>
<span class="line"><span style="color:#61AFEF;">render</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">);</span></span></code></pre></div><p>编译时 + 运行时</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 输入</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt; hello world &lt;/</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 编译成 obj</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">tag</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;div&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">children</span><span style="color:#ABB2BF;">: [{ </span><span style="color:#E06C75;">tag</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;span&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">children</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;hello world&#39;</span><span style="color:#ABB2BF;"> }]</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 将对象渲染到 body</span></span>
<span class="line"><span style="color:#61AFEF;">render</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">);</span></span></code></pre></div><p>编译时</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 输入</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt; hello world &lt;/</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 直接转换成代码</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">div</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createElement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;div&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">span</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createElement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;span&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">span</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerText</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;hello world&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">div</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">appChild</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">span</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">body</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">appChild</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">);</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Svelte 就是纯编译时框架，编译时框架性能会更好，但是不够灵活。</p></div>`,14),t=[o];function e(c,B,r,y,i,F){return n(),a("div",null,t)}const C=s(p,[["render",e]]);export{A as __pageData,C as default};
