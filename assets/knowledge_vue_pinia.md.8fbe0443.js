import{_ as s,o as n,c as a,a as l}from"./app.95627620.js";const d=JSON.parse('{"title":"Pinia","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u7279\u6027","slug":"\u7279\u6027","link":"#\u7279\u6027","children":[]},{"level":2,"title":"Store","slug":"store","link":"#store","children":[]},{"level":2,"title":"Getters","slug":"getters","link":"#getters","children":[]},{"level":2,"title":"Actions","slug":"actions","link":"#actions","children":[]},{"level":2,"title":"\u53C2\u8003","slug":"\u53C2\u8003","link":"#\u53C2\u8003","children":[]}],"relativePath":"knowledge/vue/pinia.md"}'),p={name:"knowledge/vue/pinia.md"},o=l(`<h1 id="pinia" tabindex="-1">Pinia <a class="header-anchor" href="#pinia" aria-hidden="true">#</a></h1><h2 id="\u7279\u6027" tabindex="-1">\u7279\u6027 <a class="header-anchor" href="#\u7279\u6027" aria-hidden="true">#</a></h2><ol><li>Pinia \u7684 store \u662F\u76F8\u4E92\u72EC\u7ACB\u7684\uFF0C\u901A\u8FC7\u552F\u4E00 key \u6765\u533A\u5206</li><li>Pinia \u6CA1\u6709 Mutations\uFF0CActions \u652F\u6301\u540C\u6B65\u548C\u5F02\u6B65</li><li>\u4F7F\u7528\u4E0A\u4E0D\u9700\u8981\u7528 commit\u3001dispatch \u8FD9\u79CD\u65B9\u5F0F\uFF0C\u800C\u662F\u76F4\u63A5\u8C03\u7528</li></ol><h2 id="store" tabindex="-1">Store <a class="header-anchor" href="#store" aria-hidden="true">#</a></h2><h4 id="_1-\u521B\u5EFA-store" tabindex="-1">1. \u521B\u5EFA store <a class="header-anchor" href="#_1-\u521B\u5EFA-store" aria-hidden="true">#</a></h4><div class="language-javascript"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">defineStore</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;pinia&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">useStore</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">defineStore</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;main&#39;</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;">// other options...</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ol><li>\u5C06\u8FD4\u56DE\u7684\u51FD\u6570\u547D\u540D\u4E3A use... \u662F\u8DE8\u53EF\u7EC4\u5408\u9879\u7684\u7EA6\u5B9A\uFF0C\u4EE5\u4F7F\u5176\u7B26\u5408\u4F60\u7684\u4F7F\u7528\u4E60\u60EF\u3002</li><li>\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u5E94\u7528\u7A0B\u5E8F\u4E2D store \u7684\u552F\u4E00 id</li></ol></div><h4 id="_2-\u4F7F\u7528-store" tabindex="-1">2. \u4F7F\u7528 store <a class="header-anchor" href="#_2-\u4F7F\u7528-store" aria-hidden="true">#</a></h4><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">useStore</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;@/stores/counter&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">defineComponent</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">setup</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">store</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">useStore</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// \u274C \u8FD9\u4E0D\u8D77\u4F5C\u7528\uFF0C\u56E0\u4E3A\u5B83\u4F1A\u7834\u574F\u54CD\u5E94\u5F0F</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// \u8FD9\u548C\u4ECE props \u89E3\u6784\u662F\u4E00\u6837\u7684</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">doubleCount</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">store</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#7F848E;">// \u4E00\u76F4\u4F1A\u662F &quot;eduardo&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#7F848E;">// \u4E00\u76F4\u4F1A\u662F 2</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">doubleCount</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#7F848E;">// \u8FD9\u5C06\u662F\u54CD\u5E94\u5F0F\u7684</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">doubleValue</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">computed</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">store</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">doubleCount</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span></code></pre></div><h4 id="_3-storetorefs-\u53EF\u4EE5\u5C06\u6570\u636E\u53D8\u6210\u54CD\u5E94\u5F0F" tabindex="-1">3. <code>storeToRefs</code> \u53EF\u4EE5\u5C06\u6570\u636E\u53D8\u6210\u54CD\u5E94\u5F0F <a class="header-anchor" href="#_3-storetorefs-\u53EF\u4EE5\u5C06\u6570\u636E\u53D8\u6210\u54CD\u5E94\u5F0F" aria-hidden="true">#</a></h4><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">storeToRefs</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;pinia&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">defineComponent</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">setup</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">store</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">useStore</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// \`name\` \u548C \`doubleCount\` \u662F\u54CD\u5E94\u5F0F\u5F15\u7528</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// \u8FD9\u4E5F\u4F1A\u4E3A\u63D2\u4EF6\u6DFB\u52A0\u7684\u5C5E\u6027\u521B\u5EFA\u5F15\u7528</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// \u4F46\u8DF3\u8FC7\u4EFB\u4F55 action \u6216 \u975E\u54CD\u5E94\u5F0F\uFF08\u4E0D\u662F ref/reactive\uFF09\u7684\u5C5E\u6027</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">doubleCount</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">storeToRefs</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">store</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">doubleCount</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span></code></pre></div><h2 id="getters" tabindex="-1">Getters <a class="header-anchor" href="#getters" aria-hidden="true">#</a></h2><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">useStore</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">defineStore</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;main&#39;</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;">// other options...</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">getters</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">/**</span></span>
<span class="line"><span style="color:#7F848E;">     * </span><span style="color:#C678DD;">@example</span></span>
<span class="line"><span style="color:#7F848E;">     * &lt;template&gt;</span></span>
<span class="line"><span style="color:#7F848E;">     *    &lt;p&gt;Double count is {{ store.doubleCount }}&lt;/p&gt;</span></span>
<span class="line"><span style="color:#7F848E;">     * &lt;/template&gt;</span></span>
<span class="line"><span style="color:#7F848E;">     */</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">doubleCount</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">state</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">counter</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">/**</span></span>
<span class="line"><span style="color:#7F848E;">     * </span><span style="color:#C678DD;">@example</span></span>
<span class="line"><span style="color:#7F848E;">     * &lt;template&gt;</span></span>
<span class="line"><span style="color:#7F848E;">     *    &lt;p&gt;User 2: {{ getUserById(2) }}&lt;/p&gt;</span></span>
<span class="line"><span style="color:#7F848E;">     * &lt;/template&gt;</span></span>
<span class="line"><span style="color:#7F848E;">     *</span></span>
<span class="line"><span style="color:#7F848E;">     *</span></span>
<span class="line"><span style="color:#7F848E;">     * setup() {</span></span>
<span class="line"><span style="color:#7F848E;">     *  const store = useStore()</span></span>
<span class="line"><span style="color:#7F848E;">     *  return { getUserById: store.getUserById }</span></span>
<span class="line"><span style="color:#7F848E;">     * }</span></span>
<span class="line"><span style="color:#7F848E;">     */</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">getUserById</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">userId</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">state</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">users</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">find</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">user</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">user</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">userId</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span></code></pre></div><h2 id="actions" tabindex="-1">Actions <a class="header-anchor" href="#actions" aria-hidden="true">#</a></h2><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">useStore</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">defineStore</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;main&#39;</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;">// other options...</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">actions</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">/**</span></span>
<span class="line"><span style="color:#7F848E;">     * setup() {</span></span>
<span class="line"><span style="color:#7F848E;">     *    const main = useMainStore()</span></span>
<span class="line"><span style="color:#7F848E;">     *    // Actions \u50CF methods \u4E00\u6837\u88AB\u8C03\u7528\uFF1A</span></span>
<span class="line"><span style="color:#7F848E;">     *    main.randomizeCounter()</span></span>
<span class="line"><span style="color:#7F848E;">     *    return {}</span></span>
<span class="line"><span style="color:#7F848E;">     * },</span></span>
<span class="line"><span style="color:#7F848E;">     */</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">increment</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">counter</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">registerUser</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">login</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">password</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">userData</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">api</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">post</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">login</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">password</span><span style="color:#ABB2BF;"> });</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span></code></pre></div><h2 id="\u53C2\u8003" tabindex="-1">\u53C2\u8003 <a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a></h2><ul><li><a href="https://pinia.web3doc.top/getting-started.html" target="_blank" rel="noreferrer">pinia \u5B98\u7F51</a></li></ul>`,17),e=[o];function t(c,B,r,y,i,F){return n(),a("div",null,e)}const C=s(p,[["render",t]]);export{d as __pageData,C as default};
