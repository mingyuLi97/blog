import{_ as s,o as n,c as a,R as l}from"./chunks/framework.35669211.js";const D=JSON.parse('{"title":"大数","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/js/bigint.md"}'),o={name:"knowledge/js/bigint.md"},p=l(`<h1 id="大数" tabindex="-1">大数 <a class="header-anchor" href="#大数" aria-label="Permalink to &quot;大数&quot;">​</a></h1><h2 id="安全整数" tabindex="-1">安全整数 <a class="header-anchor" href="#安全整数" aria-label="Permalink to &quot;安全整数&quot;">​</a></h2><ul><li><strong><code>Number.MAX_SAFE_INTEGER</code></strong> 9007199254740991，即 <code>2^53 - 1</code> -</li><li><strong><code>Number.MIN_SAFE_INTEGER</code></strong> -9007199254740991</li></ul><p>这个范围内的值可以执行安全运算，因此称为”安全整数“。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>JavaScript 使用 IEEE 754 双精度浮点数（64 位）来表示所有数字。在这种表示法中，有 53 位用于表示整数部分，因此最大的安全整数是 2^53 - 1。</p></div><h2 id="最大的数" tabindex="-1">最大的数 <a class="header-anchor" href="#最大的数" aria-label="Permalink to &quot;最大的数&quot;">​</a></h2><p><code>Number.MAX_VALUE</code> （约为 1.798e+308）是 JavaScript 中最大的浮点数值。这个值受到 IEEE 754 双精度浮点数的实现限制，该标准定义了数字的最大上限。如果一个数大于 <code>Number.MAX_VALUE</code>，它将被表示为 <code>Infinity</code>。</p><h2 id="bigint" tabindex="-1">BigInt <a class="header-anchor" href="#bigint" aria-label="Permalink to &quot;BigInt&quot;">​</a></h2><p>BigInt 是一种内置对象，它提供了一种方法来表示大于 <code>2^53 - 1</code> 的整数, 它可以表示任意大的数值。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 声明方式</span></span>
<span class="line"><span style="color:#D19A66;">9007199254740991</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#61AFEF;">BigInt</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">9007199254740991</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">BigInt</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;9007199254740991&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">BigInt</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;0x1fffffffffffff&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">BigInt</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;0b11111111111111111111111111111111111111111111111111111&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">BigInt</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// TypeError: B BigInt is not a constructor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 当使用 BigInt 时，带小数的运算会被取整</span></span>
<span class="line"><span style="color:#D19A66;">5</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 2n</span></span>
<span class="line"><span style="color:#61AFEF;">BigInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Number</span><span style="color:#ABB2BF;">.MAX_SAFE_INTEGER) </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// 9007199254740992n</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 可以与普通 number 比较 但是不能运算</span></span>
<span class="line"><span style="color:#D19A66;">1</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// TypeError: Cannot mix BigInt and other types,</span></span>
<span class="line"><span style="color:#56B6C2;">+</span><span style="color:#D19A66;">1</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// TypeError: Cannot convert a BigInt value to a number</span></span>
<span class="line"><span style="color:#D19A66;">0</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#D19A66;">0</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#D19A66;">1</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&lt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;bigint&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#61AFEF;">Boolean</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#61AFEF;">Boolean</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">12</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#61AFEF;">Number</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#61AFEF;">parseInt</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#61AFEF;">Object</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// BigInt {1n}</span></span>
<span class="line"><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Object</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#C678DD;">n</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// object</span></span></code></pre></div>`,10),t=[p];function e(c,r,B,y,i,A){return n(),a("div",null,t)}const E=s(o,[["render",e]]);export{D as __pageData,E as default};
