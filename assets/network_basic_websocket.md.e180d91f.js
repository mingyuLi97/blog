import{_ as e,o as t,c as a,R as o}from"./chunks/framework.d45ee533.js";const _=JSON.parse('{"title":"WebSocket","description":"","frontmatter":{},"headers":[],"relativePath":"network/basic/websocket.md"}'),l={name:"network/basic/websocket.md"},r=o('<h1 id="websocket" tabindex="-1">WebSocket <a class="header-anchor" href="#websocket" aria-label="Permalink to &quot;WebSocket&quot;">​</a></h1><h2 id="what" tabindex="-1">what <a class="header-anchor" href="#what" aria-label="Permalink to &quot;what&quot;">​</a></h2><ol><li>WebSocket 是 HTML5 下的一种新协议，建立在 TCP 协议之上。</li><li>一次握手、持久连接、双向通信（主要还是服务端推送）</li><li>协议标识符是 ws（如果加密，则为 wss），如 ws://localhost:8888</li></ol><h2 id="过程" tabindex="-1">过程 <a class="header-anchor" href="#过程" aria-label="Permalink to &quot;过程&quot;">​</a></h2><ol><li>客户端经过 3 次握手建立 TCP 连接，发送 http 请求（http 请求中存放 WebSocket 的一些信息，Upgrade、Connection、WebSocket-Version 等）</li><li>服务端接收到请求，同样采用 http 返回数据。</li><li>客户端收到连接成功的消息，借助 TCP 通道进行全双工通信。</li></ol><p>说明：<code>Upgrade: websocket;Connection: Upgrade;</code> 告诉服务器我是一个 WebSocket 协议，而不是 http</p><h2 id="心跳包用途" tabindex="-1">心跳包用途 <a class="header-anchor" href="#心跳包用途" aria-label="Permalink to &quot;心跳包用途&quot;">​</a></h2><ol><li>定时发送消息，防止服务端超时自动断线。</li><li>检测连接是否正常，如果发送一个消息后服务端没有响应，应重新建立连接。</li></ol><h2 id="websocket-与-http-的关系" tabindex="-1">WebSocket 与 http 的关系 <a class="header-anchor" href="#websocket-与-http-的关系" aria-label="Permalink to &quot;WebSocket 与 http 的关系&quot;">​</a></h2><p><strong>相同点：</strong></p><ol><li>都是基于 TCP，都是可靠性的传输协议。</li><li>都是应用层协议。</li></ol><p><strong>不同点：</strong></p><ol><li>WebSocket 是双向通信， http 为单向（HTTP/2 也支持服务端推送，但是只能推送静态资源）</li><li>WebSocket 需要先发送一次 http 请求，服务端和客户端握手一次后才建立连接，而 http 是直接向服务器发送请求。</li></ol><p><strong>联系：</strong></p><ol><li>WebSocket 在建立握手时，数据是通过 HTTP 传输的。但是建立之后，在真正传输时候是不需要 HTTP 协议的。</li></ol><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://juejin.cn/post/6844903544978407431" target="_blank" rel="noreferrer">掘金：WebSocket：5 分钟从入门到精通</a></li><li><a href="https://blog.csdn.net/qq_54773998/article/details/123863493" target="_blank" rel="noreferrer">CSDN：WebSocket</a></li><li><a href="https://juejin.cn/post/7020964728386093093#heading-3" target="_blank" rel="noreferrer">掘金：一文吃透 WebSocket 原理 刚面试完，趁热赶紧整理</a></li></ul>',17),i=[r];function c(n,s,h,b,d,p){return t(),a("div",null,i)}const u=e(l,[["render",c]]);export{_ as __pageData,u as default};
