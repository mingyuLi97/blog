import{_ as s,o as a,c as n,R as o}from"./chunks/framework.35669211.js";const F=JSON.parse('{"title":"箭头函数","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/js/arrow_function.md"}'),l={name:"knowledge/js/arrow_function.md"},e=o(`<h1 id="箭头函数" tabindex="-1">箭头函数 <a class="header-anchor" href="#箭头函数" aria-label="Permalink to &quot;箭头函数&quot;">​</a></h1><blockquote><p>箭头函数表达式的语法比函数表达式更简洁，并且没有自己的 this，arguments，super 或 new.target。箭头函数表达式更适用于那些本来需要匿名函数的地方，并且它不能用作构造函数</p></blockquote><h2 id="this" tabindex="-1">this <a class="header-anchor" href="#this" aria-label="Permalink to &quot;this&quot;">​</a></h2><ol><li><p>箭头函数没有自己的 this 对象，内部的 this 就是定义时上层作用域中的 this，也就是说，箭头函数内部的 this 指向是固定的</p></li><li><p>箭头函数的 this 不能被 call、apply、bind 改变</p></li></ol><h2 id="箭头函数的原型是-undefined" tabindex="-1">箭头函数的原型是 <code>undefined</code> <a class="header-anchor" href="#箭头函数的原型是-undefined" aria-label="Permalink to &quot;箭头函数的原型是 \`undefined\`&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">fn</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// undefined</span></span></code></pre></div><h2 id="箭头函数不能当成一个构造函数" tabindex="-1">箭头函数不能当成一个构造函数 <a class="header-anchor" href="#箭头函数不能当成一个构造函数" aria-label="Permalink to &quot;箭头函数不能当成一个构造函数&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Uncaught TypeError: fn is not a constructor</span></span></code></pre></div><h2 id="不能使用-new-target" tabindex="-1">不能使用 <code>new.target</code> <a class="header-anchor" href="#不能使用-new-target" aria-label="Permalink to &quot;不能使用 \`new.target\`&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">)} </span><span style="color:#7F848E;font-style:italic;">// Uncaught SyntaxError: new.target expression is not allowed here</span></span></code></pre></div><h2 id="箭头函数没有-arguments-对象" tabindex="-1">箭头函数没有 arguments 对象 <a class="header-anchor" href="#箭头函数没有-arguments-对象" aria-label="Permalink to &quot;箭头函数没有 arguments 对象&quot;">​</a></h2><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions" target="_blank" rel="noreferrer">MDN：箭头函数</a></li><li><a href="https://juejin.cn/post/6952959678800199687" target="_blank" rel="noreferrer">掘金：关于 new 和箭头函数</a></li></ul>`,13),t=[e];function p(r,c,i,B,y,d){return a(),n("div",null,t)}const u=s(l,[["render",p]]);export{F as __pageData,u as default};
