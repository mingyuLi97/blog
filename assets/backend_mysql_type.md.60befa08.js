import{_ as t,o as e,c as l,U as a}from"./chunks/framework.3125349e.js";const b=JSON.parse('{"title":"数据类型","description":"","frontmatter":{},"headers":[],"relativePath":"backend/mysql/type.md","filePath":"backend/mysql/type.md"}'),d={name:"backend/mysql/type.md"},n=a('<h1 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h1><h2 id="字符串类型-strings" tabindex="-1">字符串类型 - STRINGS <a class="header-anchor" href="#字符串类型-strings" aria-label="Permalink to &quot;字符串类型 - STRINGS&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">描述</th><th style="text-align:left;">场景</th></tr></thead><tbody><tr><td style="text-align:center;">CHAR(X)</td><td style="text-align:center;">固定长度的字符串</td><td style="text-align:left;">身份证号、手机号</td></tr><tr><td style="text-align:center;">VARCHAR(X)</td><td style="text-align:center;">不定长度的字符串，最大空间 64KB</td><td style="text-align:left;">用户名、密码、邮箱、地址</td></tr><tr><td style="text-align:center;">TINYTEXT</td><td style="text-align:center;">不定长度的字符串，最大空间 225B</td><td style="text-align:left;">标签</td></tr><tr><td style="text-align:center;">TEXT</td><td style="text-align:center;">不定长度的字符串，最大空间 64KB</td><td style="text-align:left;">帖子、文章</td></tr><tr><td style="text-align:center;">MEDIUMTEXT</td><td style="text-align:center;">不定长度的字符串，最大空间 16MB</td><td style="text-align:left;">帖子、文章</td></tr><tr><td style="text-align:center;">LONGTEXT</td><td style="text-align:center;">不定长度的字符串，最大空间 4GB</td><td style="text-align:left;">大型富文本、大型文档</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>为什么字符串类型可以存储身份证号这种数值型？ <ul><li>答：因为我们不对其做数值运算</li></ul></li><li>TEXT 和 VARCHAR 怎么选？ <ul><li>TODO</li></ul></li></ul></div><h2 id="整型-integers" tabindex="-1">整型 - INTEGERS <a class="header-anchor" href="#整型-integers" aria-label="Permalink to &quot;整型 - INTEGERS&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">空间</th><th style="text-align:left;">描述</th><th style="text-align:left;">场景</th></tr></thead><tbody><tr><td style="text-align:center;">TINYINT</td><td style="text-align:center;">1B</td><td style="text-align:left;">范围 <code>[-128, 127]</code>（有符号）,<code>[0, 255]</code>（无符号）</td><td style="text-align:left;">年龄、存储小范围的整数值</td></tr><tr><td style="text-align:center;">SMALLINT</td><td style="text-align:center;">2B</td><td style="text-align:left;"><code>[-32768, 32767]</code> <code>[0, 65535]</code></td><td style="text-align:left;">年份</td></tr><tr><td style="text-align:center;">MEDIUMINT</td><td style="text-align:center;">3B</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:center;">INT/INTEGER</td><td style="text-align:center;">4B</td><td style="text-align:left;">-</td><td style="text-align:left;">用户 ID、计数器</td></tr><tr><td style="text-align:center;">BIGINT</td><td style="text-align:center;">8B</td><td style="text-align:left;">-</td><td style="text-align:left;">主键、订单号</td></tr></tbody></table><h2 id="浮点-rations" tabindex="-1">浮点 - RATIONS <a class="header-anchor" href="#浮点-rations" aria-label="Permalink to &quot;浮点 - RATIONS&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:left;">描述</th><th style="text-align:left;">场景</th></tr></thead><tbody><tr><td style="text-align:center;">DECIMAL(p, s)</td><td style="text-align:left;">p：存储的数，s：精度 DECIMAL(9, 2) =&gt; 1234567.89</td><td style="text-align:left;">货币</td></tr><tr><td style="text-align:center;">FLOAT</td><td style="text-align:left;">特别小的数，没有精度</td><td style="text-align:left;">科学运算</td></tr><tr><td style="text-align:center;">DOUBLE</td><td style="text-align:left;">特别大的数，没有精度</td><td style="text-align:left;">科学运算</td></tr></tbody></table><h2 id="布尔-booleans" tabindex="-1">布尔 - BOOLEANS <a class="header-anchor" href="#布尔-booleans" aria-label="Permalink to &quot;布尔 - BOOLEANS&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:left;">描述</th><th style="text-align:left;">场景</th></tr></thead><tbody><tr><td style="text-align:center;">BOOL/BOOLEAN</td><td style="text-align:left;">布尔</td><td style="text-align:left;">是否删除、是否发布</td></tr></tbody></table><h2 id="枚举-enums" tabindex="-1">枚举 - ENUMS <a class="header-anchor" href="#枚举-enums" aria-label="Permalink to &quot;枚举 - ENUMS&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:left;">描述</th><th style="text-align:left;">场景</th></tr></thead><tbody><tr><td style="text-align:center;">ENUM(X,Y)</td><td style="text-align:left;">ENUM(&#39;small&#39;, &#39;medium&#39;,&#39;large&#39;)</td><td style="text-align:left;">枚举</td></tr></tbody></table><h2 id="时间-date-time" tabindex="-1">时间 - DATE/TIME <a class="header-anchor" href="#时间-date-time" aria-label="Permalink to &quot;时间 - DATE/TIME&quot;">​</a></h2><table><thead><tr><th>类型</th><th>描述</th><th>场景</th></tr></thead><tbody><tr><td>DATE</td><td>日期，格式为 &#39;YYYY-MM-DD&#39;</td><td>存储日期，不包含时间信息</td></tr><tr><td>TIME</td><td>时间，格式为 &#39;HH:MM:SS&#39;</td><td>存储时间，不包含日期信息</td></tr><tr><td>DATETIME</td><td>日期和时间，格式为 &#39;YYYY-MM-DD HH:MM:SS&#39;</td><td>存储日期和时间，精确到秒级别</td></tr><tr><td>TIMESTAMP</td><td>时间戳，格式为 &#39;YYYY-MM-DD HH:MM:SS&#39;，只能存储 2038 年以前的</td><td>存储日期和时间，精确到秒级别，受时区影响</td></tr><tr><td>YEAR</td><td>年份，格式为 &#39;YYYY&#39;</td><td>存储年份信息，可以使用 2 位或 4 位年份表示</td></tr></tbody></table><h2 id="blobs" tabindex="-1">BLOBS <a class="header-anchor" href="#blobs" aria-label="Permalink to &quot;BLOBS&quot;">​</a></h2><p>存储视频、图片、PDF、WORD 等文件，包括所有二进制数据</p><h2 id="json" tabindex="-1">JSON <a class="header-anchor" href="#json" aria-label="Permalink to &quot;JSON&quot;">​</a></h2><p>存储 json 数据</p>',18),r=[n];function i(s,h,o,c,y,x){return e(),l("div",null,r)}const f=t(d,[["render",i]]);export{b as __pageData,f as default};
