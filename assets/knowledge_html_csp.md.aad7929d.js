import{_ as s,o as a,c as l,Q as e}from"./chunks/framework.fa80b722.js";const _=JSON.parse('{"title":"CSP","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/html/csp.md","filePath":"knowledge/html/csp.md"}'),t={name:"knowledge/html/csp.md"},n=e(`<h1 id="csp" tabindex="-1">CSP <a class="header-anchor" href="#csp" aria-label="Permalink to &quot;CSP&quot;">​</a></h1><p>CSP（Content Security Policy）是一种 Web 应用程序安全策略，它用于限制网站加载的资源，它允许网站所有者定义可信任的内容来源，禁止非授权来源的脚本、图片、样式表等资源加载，从而有效地防止跨站脚本攻击（XSS）、点击劫持等攻击方式。</p><h2 id="设置方式" tabindex="-1">设置方式 <a class="header-anchor" href="#设置方式" aria-label="Permalink to &quot;设置方式&quot;">​</a></h2><ol><li>HTTP</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">HTTP/1.1 200 OK</span></span>
<span class="line"><span style="color:#abb2bf;">Content-Security-Policy: default-src &#39;self&#39;; script-src &#39;self&#39; https://apis.google.com</span></span>
<span class="line"><span style="color:#abb2bf;">Content-Type: text/html;charset=UTF-8</span></span></code></pre></div><ol start="2"><li>HTML meta 标签</li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 仅允许自己的站点和 example.com 加载 js 脚本--&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">meta</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#D19A66;">http-equiv</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Content-Security-Policy&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#D19A66;">content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;script-src &#39;self&#39; https://www.example.com&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">/&gt;</span></span></code></pre></div><h2 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to &quot;优点&quot;">​</a></h2><ul><li>减少恶意代码注入、执行。</li><li>保护用户免受 XSS 攻击，从而使他们的敏感信息受到保护</li><li>增加您应用程序的安全性</li></ul><h2 id="缺点" tabindex="-1">缺点 <a class="header-anchor" href="#缺点" aria-label="Permalink to &quot;缺点&quot;">​</a></h2><ul><li><strong>配置复杂</strong> 一般页面会有大量三方资源，如广告、插件等，需要经过很繁琐的配置才能使页面功能正常。</li><li><strong>影响功能</strong> 如果 CSP 设置过于严格，尤其是使用 HTTP 下发时，很可能导致页面的某个功能不能用。</li></ul>`,11),o=[n];function p(c,r,i,d,h,u){return a(),l("div",null,o)}const m=s(t,[["render",p]]);export{_ as __pageData,m as default};
