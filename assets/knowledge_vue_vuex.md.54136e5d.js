import{_ as s,o as n,c as a,d as l}from"./app.5685df7e.js";const E=JSON.parse('{"title":"vuex","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u57FA\u672C\u5C5E\u6027","slug":"\u57FA\u672C\u5C5E\u6027","link":"#\u57FA\u672C\u5C5E\u6027","children":[]},{"level":2,"title":"\u4E3A\u4EC0\u4E48 mutations \u4E0D\u80FD\u5199\u5F02\u6B65","slug":"\u4E3A\u4EC0\u4E48-mutations-\u4E0D\u80FD\u5199\u5F02\u6B65","link":"#\u4E3A\u4EC0\u4E48-mutations-\u4E0D\u80FD\u5199\u5F02\u6B65","children":[]},{"level":2,"title":"\u4E3A\u4EC0\u4E48\u8981\u6709\u6A21\u5757","slug":"\u4E3A\u4EC0\u4E48\u8981\u6709\u6A21\u5757","link":"#\u4E3A\u4EC0\u4E48\u8981\u6709\u6A21\u5757","children":[]},{"level":2,"title":"\u4E25\u683C\u6A21\u5F0F","slug":"\u4E25\u683C\u6A21\u5F0F","link":"#\u4E25\u683C\u6A21\u5F0F","children":[]},{"level":2,"title":"\u6301\u4E45\u5316\u5B58\u50A8\u89E3\u51B3\u65B9\u6848","slug":"\u6301\u4E45\u5316\u5B58\u50A8\u89E3\u51B3\u65B9\u6848","link":"#\u6301\u4E45\u5316\u5B58\u50A8\u89E3\u51B3\u65B9\u6848","children":[]},{"level":2,"title":"\u539F\u7406","slug":"\u539F\u7406","link":"#\u539F\u7406","children":[]}],"relativePath":"knowledge/vue/vuex.md"}'),p={name:"knowledge/vue/vuex.md"},o=l(`<h1 id="vuex" tabindex="-1">vuex <a class="header-anchor" href="#vuex" aria-hidden="true">#</a></h1><h2 id="\u57FA\u672C\u5C5E\u6027" tabindex="-1">\u57FA\u672C\u5C5E\u6027 <a class="header-anchor" href="#\u57FA\u672C\u5C5E\u6027" aria-hidden="true">#</a></h2><ol><li>state =&gt; \u57FA\u672C\u6570\u636E(\u6570\u636E\u6E90\u5B58\u653E\u5730)</li><li>getters =&gt; \u4ECE\u57FA\u672C\u6570\u636E\u6D3E\u751F\u51FA\u6765\u7684\u6570\u636E</li><li>mutations =&gt; \u63D0\u4EA4\u66F4\u6539\u6570\u636E\u7684\u65B9\u6CD5\uFF0C\u540C\u6B65</li><li>actions =&gt; \u7528\u4E8E\u6267\u884C\u5F02\u6B65\u63D0\u4EA4</li><li>modules =&gt; \u6A21\u5757\u5316 Vuex</li></ol><h2 id="\u4E3A\u4EC0\u4E48-mutations-\u4E0D\u80FD\u5199\u5F02\u6B65" tabindex="-1">\u4E3A\u4EC0\u4E48 mutations \u4E0D\u80FD\u5199\u5F02\u6B65 <a class="header-anchor" href="#\u4E3A\u4EC0\u4E48-mutations-\u4E0D\u80FD\u5199\u5F02\u6B65" aria-hidden="true">#</a></h2><p><strong>\u53EF\u4EE5\u5199\uFF0C\u4F46\u4E0D\u63A8\u8350</strong> \u6BCF\u4E2A mutation \u6267\u884C\u5B8C\u6210\u540E\u90FD\u4F1A\u5728 vue-devtools \u540C\u6B65\u72B6\u6001\uFF0C\u65B9\u4FBF\u8C03\u8BD5\uFF0C\u5982\u679C\u5199\u5F02\u6B65\u5C31\u4F1A\u5BFC\u81F4\u8DDF\u8E2A\u9519\u8BEF\u3002 \u4E3A\u4E86\u4EE3\u7801\u7684\u53EF\u8BFB\u6027\u3001\u5065\u58EE\u6027\u4E0D\u63A8\u8350 mutations \u5199\u5F02\u6B65\u4EE3\u7801</p><p><strong>\u6807\u51C6\u6D41\u7A0B</strong>\uFF1A\u4F7F\u7528 this.dispatch \u89E6\u53D1 action \u4E2D\u7684\u65B9\u6CD5\uFF0CAction \u91CC\u9762\u63D0\u4EA4 mutation \u65B9\u6CD5\uFF0C mutation \u4FEE\u6539 state \u4E0A\u7684\u72B6\u6001\u3002</p><h2 id="\u4E3A\u4EC0\u4E48\u8981\u6709\u6A21\u5757" tabindex="-1">\u4E3A\u4EC0\u4E48\u8981\u6709\u6A21\u5757 <a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u8981\u6709\u6A21\u5757" aria-hidden="true">#</a></h2><p>\u56E0\u4E3A state \u4F7F\u7528\u5355\u4E00\u72B6\u6001\u6811\uFF0C\u5E94\u7528\u7684\u6240\u6709\u72B6\u6001\u4F1A\u96C6\u4E2D\u5230\u4E00\u4E2A\u6BD4\u8F83\u5927\u7684\u5BF9\u8C61\u3002\u5F53\u5E94\u7528\u53D8\u5F97\u975E\u5E38\u590D\u6742\u65F6\uFF0Cstore \u5BF9\u8C61\u5C31\u6709\u53EF\u80FD\u53D8\u5F97\u76F8\u5F53\u81C3\u80BF\u3002\u6240\u4EE5\u5C06 store \u5206\u5272\u6210\u6A21\u5757\uFF08module\uFF09\u3002\u6BCF\u4E2A\u6A21\u5757\u62E5\u6709\u81EA\u5DF1\u7684 state\u3001mutations\u3001actions\u3001getters\uFF0C\u751A\u81F3\u662F\u5D4C\u5957\u5B50\u6A21\u5757\uFF0C\u4ECE\u4E0A\u81F3\u4E0B\u8FDB\u884C\u540C\u6837\u65B9\u5F0F\u7684\u5206\u5272\u3002</p><h2 id="\u4E25\u683C\u6A21\u5F0F" tabindex="-1">\u4E25\u683C\u6A21\u5F0F <a class="header-anchor" href="#\u4E25\u683C\u6A21\u5F0F" aria-hidden="true">#</a></h2><div class="language-javascript"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">store</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Vuex</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Store</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">strict</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span></code></pre></div><p>\u5728\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C\u65E0\u8BBA\u4F55\u65F6\u53D1\u751F\u4E86\u72B6\u6001\u53D8\u66F4\u4E14\u4E0D\u662F\u7531 mutation \u51FD\u6570\u5F15\u8D77\u7684\uFF0C\u5C06\u4F1A\u629B\u51FA\u9519\u8BEF\u3002\u8FD9\u80FD\u4FDD\u8BC1\u6240\u6709\u7684\u72B6\u6001\u53D8\u66F4\u90FD\u80FD\u88AB\u8C03\u8BD5\u5DE5\u5177\u8DDF\u8E2A\u5230\u3002 \u5728 Vuex.Store \u6784\u9020\u5668\u9009\u9879\u4E2D\u5F00\u542F,\u5982\u4E0B</p><h2 id="\u6301\u4E45\u5316\u5B58\u50A8\u89E3\u51B3\u65B9\u6848" tabindex="-1">\u6301\u4E45\u5316\u5B58\u50A8\u89E3\u51B3\u65B9\u6848 <a class="header-anchor" href="#\u6301\u4E45\u5316\u5B58\u50A8\u89E3\u51B3\u65B9\u6848" aria-hidden="true">#</a></h2><ol><li>state \u5B58\u5165 localStorage, \u6BCF\u6B21\u6267\u884C mutations \u65F6\uFF0C\u5C06\u4FEE\u6539\u7684\u5730\u65B9\u540C\u6B65\u5230 localStorage</li><li><code>beforeunload</code> \u4E8B\u4EF6\uFF08\u9875\u9762\u5378\u8F7D\u4E4B\u524D\uFF09\u4E00\u6B21\u6027\u5C06 state \u5B58\u50A8\u5728 localStorage</li><li><a href="https://github.com/robinvdvleuten/vuex-persistedstate" target="_blank" rel="noreferrer">vuex-persistedstate \u63D2\u4EF6</a></li></ol><h2 id="\u539F\u7406" tabindex="-1">\u539F\u7406 <a class="header-anchor" href="#\u539F\u7406" aria-hidden="true">#</a></h2><ol><li>\u901A\u8FC7 <code>Vue.mixin({beforeCreate: initVuex})</code> \u5C06 $store \u6302\u8F7D\u5230\u6240\u6709\u5B9E\u4F8B\u4E0A</li><li>\u5C06\u7528\u6237\u4F20\u5165\u7684 state \u901A\u8FC7 <code>new Vue()</code> \u7684\u65B9\u5F0F\uFF0C\u5C06\u5176\u53D8\u4E3A\u54CD\u5E94\u5F0F</li><li>\u901A\u8FC7 <code>Object.defineProperty</code> \u7ED9 getter \u589E\u52A0\u54CD\u5E94\u5F0F</li></ol><details class="details custom-block"><summary>vuex <a href="https://www.bilibili.com/video/BV1TB4y1T7Vx?spm_id_from=333.337.search-card.all.click&amp;vd_source=90f72d18968e9c13d70200bc4fd4291e" target="_blank" rel="noreferrer">\u6E90\u7801</a></summary><div class="language-javascript"><button class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Vue</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">_forEach</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">callback</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">callback</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ModuleConnection</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">constructor</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">register</span><span style="color:#ABB2BF;">([], </span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">register</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">rootModule</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">newModule</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">_raw</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">rootModule</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">_children</span><span style="color:#ABB2BF;">: {},</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">rootModule</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">state</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">root</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">newModule</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;">//\u6CE8\u518C\u6839\u6A21\u5757\uFF0C\u4E00\u5F00\u59CB\u4F20\u8FDB\u6765\u7684\u6A21\u5757</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">slice</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">reduce</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;">root</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">current</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_children</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">current</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">      }, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">root</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_children</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">newModule</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//\u5982\u679C\u8FD9\u4E2A\u6A21\u5757\u8FD8\u6709\u5176\u4ED6\u7684\u5B50\u6A21\u5757\u7684\u8BDD\uFF0C\u9012\u5F52\u6CE8\u518C\u6A21\u5757</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">rootModule</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">modules</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#61AFEF;">_forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">rootModule</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">modules</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;">moduleName</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">module</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">register</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">concat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">moduleName</span><span style="color:#ABB2BF;">), </span><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">installModule</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">store</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">rootModule</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">parent</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">slice</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">reduce</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">current</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">current</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">    }, </span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">parent</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">], </span><span style="color:#E5C07B;">rootModule</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">getters</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">rootModule</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">_raw</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">getters</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">getters</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">_forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">getters</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;">getterName</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">fn</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">defineProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">store</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">getters</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">getterName</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">: () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">rootModule</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">mutations</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">rootModule</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">_raw</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">mutations</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">mutations</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">_forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">mutations</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;">mutationName</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">fn</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">store</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">mutations</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">mutationName</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">store</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">mutations</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">mutationName</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> []);</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">payload</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">rootModule</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">payload</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">actions</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">rootModule</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">_raw</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">actions</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">actions</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">_forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">actions</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;">actionsName</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">fn</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">arr</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">store</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">actions</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">actionsName</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">store</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">actions</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">actionsName</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> []);</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">payload</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">store</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">payload</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">_forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">rootModule</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_children</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;">moduleName</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">module</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">installModule</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">store</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">concat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">moduleName</span><span style="color:#ABB2BF;">), </span><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Store</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">constructor</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_s</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Vue</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#61AFEF;">data</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;">//\u628Astate\u53D8\u6210\u53EF\u76D1\u63A7\u7684\u5BF9\u8C61</span></span>
<span class="line"><span style="color:#ABB2BF;">        };</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">getters</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">mutation</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">actions</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// \u628Agetters\u5C5E\u6027\u5B9A\u4E49\u5230 this.getters\u4E2D\uFF0C\u5E76\u6839\u636E\u72B6\u6001\u7684\u53D8\u5316\uFF0C\u91CD\u65B0\u6267\u884C\u6B64\u51FD\u6570</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// _forEach(getters, (getterName, value) =&gt; {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//     Object.defineProperty(this.getters, getterName, {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//         get: () =&gt; {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//             return value(this.state)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//         },</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//         enumerable: true</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//     });</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// let mutations = options.mutations || {};</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// // this.mutations = {};</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// _forEach(mutations, (mutationName, value) =&gt; {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//     // \u5148\u628A\u7528\u6237\u4F20\u8FC7\u6765\u7684mutation\u653E\u5230store\u4E0A</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//     this.mutations[mutationName] = (payload) =&gt; {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//         value.call(this, this.state, payload);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//     }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// let actions = options.actions || {};</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// // this.actions = {};</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// _forEach(actions, (actionName, value) =&gt; {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//     this.actions[actionName] = (payload) =&gt; {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//         value.call(this, this, payload);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//     }</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">// })</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;">//vuex\u6A21\u5757\u5316</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">modules</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">ModuleConnection</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">installModule</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">, [], </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">modules</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">root</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">commit</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">payload</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">mutation</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fn</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">payload</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">  };</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">dispatch</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">payload</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">actions</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fn</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">payload</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">  };</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">get</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">state</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">_s</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">install</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">_Vue</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">Vue</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">_Vue</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">mixin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">beforeCreate</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#7F848E;">//\u9700\u8981\u7ED9\u6BCF\u4E2A\u7EC4\u4EF6\u90FD\u6CE8\u518C\u4E00\u4E2Athis.$store\u7684\u5C5E\u6027</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#7F848E;">//\u9700\u8981\u5224\u65AD\u662F\u7236\u7EC4\u4EF6\u8FD8\u662F\u5B50\u7EC4\u4EF6\uFF0C\u5982\u679C\u662F\u5B50\u7EC4\u4EF6\uFF0C\u5E94\u8BE5\u5427\u7236\u7EC4\u4EF6\u7684store\u589E\u52A0\u7ED9\u5B50\u7EC4\u4EF6</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$options</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">$options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">store</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$store</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">$options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">store</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">      } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$store</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$parent</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">$parent</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$store</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#7F848E;">//\u4F7F\u7528\u7684\u65F6\u5019\u662F\u8FD9\u6837\u7684</span></span>
<span class="line"><span style="color:#7F848E;">// export default new Vuex.Store({</span></span>
<span class="line"><span style="color:#7F848E;">//     modules:{},</span></span>
<span class="line"><span style="color:#7F848E;">//     state:{},</span></span>
<span class="line"><span style="color:#7F848E;">//     actions:{},</span></span>
<span class="line"><span style="color:#7F848E;">//     getters:{},</span></span>
<span class="line"><span style="color:#7F848E;">//     mutations:{}</span></span>
<span class="line"><span style="color:#7F848E;">// })</span></span>
<span class="line"><span style="color:#7F848E;">// new Vue({</span></span>
<span class="line"><span style="color:#7F848E;">//     store</span></span>
<span class="line"><span style="color:#7F848E;">// })</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">install</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">Store</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span></code></pre></div></details>`,16),B=[o];function e(t,c,r,y,F,A){return n(),a("div",null,B)}const C=s(p,[["render",e]]);export{E as __pageData,C as default};
