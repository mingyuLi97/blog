import{_ as a,o as t,c as e,Q as o}from"./chunks/framework.fa80b722.js";const m=JSON.parse('{"title":"快速排序","description":"","frontmatter":{},"headers":[],"relativePath":"design/sort/quickSort.md","filePath":"design/sort/quickSort.md"}'),i={name:"design/sort/quickSort.md"},s=o('<h1 id="快速排序" tabindex="-1">快速排序 <a class="header-anchor" href="#快速排序" aria-label="Permalink to &quot;快速排序&quot;">​</a></h1><p><img src="https://limy-1309594960.cos.ap-beijing.myqcloud.com/202307052256523.gif" alt=""></p><h2 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h2><ol><li><p>从数列中挑出一个元素，称为 “基准”（pivot）;</p></li><li><p>重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；</p></li><li><p>递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序；</p></li></ol><h2 id="实现" tabindex="-1">实现 <a class="header-anchor" href="#实现" aria-label="Permalink to &quot;实现&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro"><code><span class="line"></span></code></pre></div>',6),r=[s];function c(n,l,p,d,_,h){return t(),e("div",null,r)}const f=a(i,[["render",c]]);export{m as __pageData,f as default};
